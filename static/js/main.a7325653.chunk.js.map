{"version":3,"sources":["Algorithms/helper.js","Algorithms/Pathfinding/aStar.js","Algorithms/Maze Generation/binaryTree.js","Algorithms/Pathfinding/BreathFirstSearch.js","Algorithms/Pathfinding/Dijkstra's.js","Algorithms/Pathfinding/GreedyBestFirstSearch.js","reducer.js","Components/Visualiser/VisualiserElement.js","Components/Visualiser/index.jsx","Components/Controller/ControllerElements.js","Components/Controller/index.jsx","App.jsx","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","Node","r","c","parent","g","h","this","f","getNeighbors","currNode","rowLen","colLen","allowDiagonal","returnNode","offset","push","neighbours","i","newR","newC","calculateDist","start","end","Math","sqrt","abs","insertAscending","array","item","key","length","splice","aStar","appState","dispatch","a","rLen","cLen","obstacles","open","closed","curr","shift","type","payload","neighbour","blocked","obstacle","inOpenOrClosed","openNode","closeNode","node","binaryTreeMaze","directions","fillBoardObstacles","dir","pos","round","random","BFS","startNode","explored","queue","neighbors","neighbor","skip","exploredNode","dijkstra","visited","inOpen","isVisited","visitedNode","GreedyBestFirstSearch","inOpenClose","closedNode","defaultStart","defaultEnd","initialState","path","nodes","Array","j","initialiseNodes","pathAlgorithms","ASTAR","mazeAlgorithms","currentAlgorithm","maze","isFinding","controlState","reducer","state","action","Error","VisualiserContainer","styled","div","NodeRow","props","blockType","Visualiser","useState","drag","setDrag","toggleObstacles","click","map","nodeRow","id","onMouseDown","onMouseUp","onClick","onMouseMove","ControllerContainer","ControllerWrapper","StartButton","button","ControlButton","DropdownContent","DropdownBtn","Dropdown","Controller","activeBtn","setactiveBtn","startAlgo","e","target","disabled","btns","document","querySelector","forEach","btn","style","opacity","endNode","console","log","stack","pop","toggleControl","generateMaze","useEffect","ToggleDropdown","dropdown","parentElement","display","changeAlgo","algo","createBtn","clearBtn","setStartBtn","setEndBtn","classList","remove","add","className","Object","keys","App","useReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7325653.chunk.js","sourcesContent":["export const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nexport class Node {\n  constructor(r, c, parent, g, h) {\n    this.r = r;\n    this.c = c;\n    this.parent = parent;\n    this.g = g;\n    this.h = h;\n    this.f = null;\n    if (this.g && this.h) {\n      this.f = this.g + this.h;\n    }\n  }\n}\n\nexport const getNeighbors = (\n  currNode,\n  rowLen,\n  colLen,\n  allowDiagonal = true,\n  returnNode = true\n) => {\n  const offset = [\n    { r: -1, c: 0 },\n    { r: 1, c: 0 },\n    { r: 0, c: -1 },\n    { r: 0, c: 1 },\n  ];\n  // diagonal movement\n  if (allowDiagonal) {\n    offset.push(\n      { r: 1, c: 1 },\n      { r: 1, c: -1 },\n      { r: -1, c: 1 },\n      { r: -1, c: -1 }\n    );\n  }\n\n  const neighbours = [];\n\n  for (const i of offset) {\n    const newR = currNode.r + i.r;\n    const newC = currNode.c + i.c;\n    if (newR >= 0 && newR < rowLen && newC >= 0 && newC < colLen) {\n      if (returnNode) {\n        neighbours.push(new Node(newR, newC, currNode));\n      } else {\n        neighbours.push({ r: newR, c: newC });\n      }\n    }\n  }\n  return neighbours;\n};\n\nexport const calculateDist = (start, end) =>\n  Math.sqrt(Math.abs(start.r - end.r) ** 2 + Math.abs(start.c - end.c) ** 2);\n// Math.abs(start.r - end.r) + Math.abs(start.c - end.c);\n\nexport const getParentPath = (rootNode) => {\n  let currNode = rootNode;\n  const path = [];\n  while (currNode) {\n    path.unshift({ r: currNode.r, c: currNode.c });\n    currNode = currNode.parent;\n  }\n  return path;\n};\n\nexport const fillBoardObstacles = (rLen, cLen, dispatch) => {\n  // fill up the entire board with obstacles\n  for (let r = 0; r < rLen; r += 1) {\n    for (let c = 0; c < cLen; c += 1) {\n      dispatch({ type: 'CREATE_OBSTACLE', payload: { r, c } });\n    }\n  }\n};\n\nexport const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n};\n\nexport const insertAscending = (array, item, key) => {\n  for (let i = 0; i < array.length; i += 1) {\n    if (key(item) < key(array[i])) {\n      array.splice(i, 0, item);\n      return;\n    }\n  }\n  array.splice(array.length, 0, item);\n};\n","import {\n  sleep,\n  Node,\n  getNeighbors,\n  calculateDist,\n  insertAscending,\n} from '../helper';\n\nconst aStar = async (appState, dispatch) => {\n  const { start, end, rLen, cLen, obstacles } = appState;\n  // open is a priority queue in an ascending order based on its f value\n  const open = [new Node(start.r, start.c, null, 0, calculateDist(start, end))];\n  const closed = [];\n\n  while (open.length > 0) {\n    // find node with the smallest f value and pop it out of open\n    const curr = open.shift();\n\n    closed.push(curr);\n    // update the color of the node in browser\n    if (\n      !(start.r === curr.r && start.c === curr.c) &&\n      !(end.r === curr.r && end.c === curr.c)\n    ) {\n      dispatch({ type: 'CLOSED_NODE', payload: { r: curr.r, c: curr.c } });\n      await sleep(5);\n    }\n\n    // reached the end\n    if (curr.r === end.r && curr.c === end.c) {\n      return curr;\n    }\n\n    // get neighbours of the current node\n    const neighbours = getNeighbors(curr, rLen, cLen, true, true);\n\n    for (const neighbour of neighbours) {\n      // check if neighbour is an obstacle, skip it\n      let blocked = false;\n      for (const obstacle of obstacles) {\n        if (obstacle.r === neighbour.r && obstacle.c === neighbour.c) {\n          blocked = true;\n        }\n      }\n\n      if (!blocked) {\n        // calculate f value of neighbour nodes of the current node\n        neighbour.g = curr.g + calculateDist(curr, neighbour);\n        neighbour.h = calculateDist(neighbour, end);\n        neighbour.f = neighbour.g + neighbour.h;\n\n        let inOpenOrClosed = false;\n        let push = false;\n\n        for (let i = 0; i < open.length; i += 1) {\n          const openNode = open[i];\n          if (openNode.r === neighbour.r && openNode.c === neighbour.c) {\n            inOpenOrClosed = true;\n            if (neighbour.g < openNode.g) {\n              // new path to the neighbour node is better,\n              // so remove the existing one from open list and append the new one to the open list\n              open.splice(i, 1);\n              push = true;\n            }\n            break;\n          }\n        }\n\n        for (let i = 0; i < closed.length; i += 1) {\n          const closeNode = closed[i];\n          if (closeNode.r === neighbour.r && closeNode.c === neighbour.c) {\n            inOpenOrClosed = true;\n            if (neighbour.g < closeNode.g) {\n              // new path to the neighbour node is better,\n              // so remove the existing one from closed list and append the new one to the open list\n              closed.splice(i, 1);\n              push = true;\n            }\n            break;\n          }\n        }\n\n        // we ignore neighbour nodes that are already in the open/closed list but has higher g value\n        if (!inOpenOrClosed || push) {\n          insertAscending(open, neighbour, (node) => node.f);\n\n          dispatch({\n            type: 'OPEN_NODE',\n            payload: { r: neighbour.r, c: neighbour.c },\n          });\n        }\n      }\n    }\n  }\n  // end point cannot be reached\n  return null;\n};\n\nexport default aStar;\n\n// const endNode = aStar(\n//   [\n//     [1, 2, 3],\n//     [4, 5, 6],\n//     [7, 8, 9],\n//   ],\n//   { r: 0, c: 0 },\n//   { r: 2, c: 2 }\n// );\n\n// if (endNode === null) {\n//   console.log('end cannot be reached');\n// } else {\n//   let currNode = endNode;\n//   while (currNode !== null) {\n//     console.log(`${currNode.r}-${currNode.c}-${currNode.g}-${currNode.h}`);\n//     currNode = currNode.parent;\n//   }\n// }\n","import { fillBoardObstacles } from '../helper';\n/* eslint-disable prefer-destructuring */\nconst binaryTreeMaze = (appState, dispatch) => {\n  // east and south direction\n  const directions = [\n    { r: 0, c: 1 },\n    { r: 1, c: 0 },\n  ];\n\n  const { rLen, cLen } = appState;\n\n  // fill up the entire board with obstacles\n  fillBoardObstacles(rLen, cLen, dispatch);\n\n  // create passageway\n  for (let r = 0; r < rLen; r += 2) {\n    for (let c = 0; c < cLen; c += 1) {\n      let dir;\n      if (r === rLen - 1 && c === cLen - 1) {\n        dir = { r: 0, c: 0 };\n      } else if (r === rLen - 1) {\n        dir = directions[0];\n      } else if (c === cLen - 1) {\n        dir = directions[1];\n      } else {\n        dir = directions[Math.round(Math.random())];\n      }\n      const pos = { r: r + dir.r, c: c + dir.c };\n      dispatch({ type: 'REMOVE_OBSTACLE', payload: { r: pos.r, c: pos.c } });\n    }\n  }\n};\n\nexport default binaryTreeMaze;\n","import { Node, getNeighbors, sleep } from '../helper';\n\nconst BFS = async (appState, dispatch) => {\n  const { start, end, rLen, cLen, obstacles } = appState;\n\n  const startNode = new Node(start.r, start.c, null);\n  const explored = [];\n  const queue = [startNode];\n\n  while (queue.length > 0) {\n    const currNode = queue.shift();\n    dispatch({\n      type: 'CLOSED_NODE',\n      payload: { r: currNode.r, c: currNode.c },\n    });\n    await sleep(5);\n\n    // reached the end\n    if (currNode.r === end.r && currNode.c === end.c) {\n      return currNode;\n    }\n\n    const neighbors = getNeighbors(currNode, rLen, cLen, true, true);\n\n    for (const neighbor of neighbors) {\n      // check if neighbor is an obstacle\n      let blocked = false;\n      for (const obstacle of obstacles) {\n        if (obstacle.r === neighbor.r && obstacle.c === neighbor.c) {\n          blocked = true;\n        }\n      }\n      if (!blocked) {\n        // check if neighbor has already been explored\n        let skip = false;\n        for (const exploredNode of explored) {\n          if (exploredNode.r === neighbor.r && exploredNode.c === neighbor.c) {\n            skip = true;\n          }\n        }\n        if (!skip) {\n          explored.push({ r: neighbor.r, c: neighbor.c });\n          queue.push(neighbor);\n          dispatch({\n            type: 'OPEN_NODE',\n            payload: { r: neighbor.r, c: neighbor.c },\n          });\n        }\n      }\n    }\n  }\n  return null;\n};\n\nexport default BFS;\n","import {\n  getNeighbors,\n  sleep,\n  Node,\n  calculateDist,\n  insertAscending,\n} from '../helper';\n\nconst dijkstra = async (appState, dispatch) => {\n  const { start, end, rLen, cLen, obstacles } = appState;\n\n  // open is a priority queue based on node's g value\n  const open = [new Node(start.r, start.c, null, 0)];\n  const visited = [];\n\n  while (open.length > 0) {\n    // open is sorted in ascending order based on their g\n    const currNode = open.shift();\n\n    visited.push(currNode);\n    dispatch({\n      type: 'CLOSED_NODE',\n      payload: { r: currNode.r, c: currNode.c },\n    });\n    await sleep(5);\n\n    // reached the end\n    if (currNode.r === end.r && currNode.c === end.c) {\n      return currNode;\n    }\n\n    const neighbors = getNeighbors(currNode, rLen, cLen, true, true);\n    for (const neighbor of neighbors) {\n      // check if its an obstacle\n      let blocked = false;\n      for (const obstacle of obstacles) {\n        if (obstacle.r === neighbor.r && obstacle.c === neighbor.c) {\n          blocked = true;\n        }\n      }\n\n      if (!blocked) {\n        neighbor.g = calculateDist(currNode, neighbor) + currNode.g;\n        let inOpen = false;\n\n        // check if neighbor is already in the open list\n        for (let i = 0; i < open.length; i += 1) {\n          const openNode = open[i];\n          if (openNode.r === neighbor.r && openNode.c === neighbor.c) {\n            inOpen = true;\n            // if the new path is shorter, replace the old one\n            if (neighbor.g < openNode.g) {\n              open.splice(i, 1);\n              insertAscending(open, neighbor, (node) => node.g);\n              dispatch({\n                type: 'OPEN_NODE',\n                payload: { r: neighbor.r, c: neighbor.c },\n              });\n            }\n          }\n        }\n\n        // check if neighbor has not been visited\n        let isVisited = false;\n        for (const visitedNode of visited) {\n          if (visitedNode.r === neighbor.r && visitedNode.c === neighbor.c) {\n            isVisited = true;\n          }\n        }\n\n        // neighbor not in open list\n        if (!inOpen && !isVisited) {\n          insertAscending(open, neighbor, (node) => node.g);\n          dispatch({\n            type: 'OPEN_NODE',\n            payload: { r: neighbor.r, c: neighbor.c },\n          });\n        }\n      }\n    }\n  }\n  return null;\n};\n\nexport default dijkstra;\n","import {\n  sleep,\n  getNeighbors,\n  insertAscending,\n  Node,\n  calculateDist,\n} from '../helper';\n\nconst GreedyBestFirstSearch = async (appState, dispatch) => {\n  const { start, end, obstacles, rLen, cLen } = appState;\n\n  const startNode = new Node(\n    start.r,\n    start.c,\n    null,\n    null,\n    calculateDist(start, end)\n  );\n  // open is a priority queue, ascending based on h value\n  const open = [startNode];\n  // closed is an array of visited nodes\n  const closed = [];\n\n  while (open.length > 0) {\n    const currNode = open.shift();\n    closed.push(currNode);\n    dispatch({\n      type: 'CLOSED_NODE',\n      payload: { r: currNode.r, c: currNode.c },\n    });\n    await sleep(5);\n\n    // reached the end\n    if (currNode.r === end.r && currNode.c === end.c) {\n      return currNode;\n    }\n\n    const neighbors = getNeighbors(currNode, rLen, cLen, true, true);\n    for (const neighbor of neighbors) {\n      // check if its an obstacle\n      let blocked = false;\n      for (const obstacle of obstacles) {\n        if (obstacle.r === neighbor.r && obstacle.c === neighbor.c) {\n          blocked = true;\n        }\n      }\n\n      if (!blocked) {\n        let inOpenClose = false;\n        for (const closedNode of closed) {\n          if (closedNode.r === neighbor.r && closedNode.c === neighbor.c) {\n            inOpenClose = true;\n            break;\n          }\n        }\n\n        for (let i = 0; i < open.length; i += 1) {\n          if (open[i].r === neighbor.r && open[i].c === neighbor.c) {\n            inOpenClose = true;\n            break;\n          }\n        }\n\n        if (!inOpenClose) {\n          // calculate neighbor's heuristic value\n          neighbor.h = calculateDist(neighbor, end);\n\n          insertAscending(open, neighbor, (node) => node.h);\n          dispatch({\n            type: 'OPEN_NODE',\n            payload: { r: neighbor.r, c: neighbor.c },\n          });\n        }\n      }\n    }\n  }\n  return null;\n};\n\nexport default GreedyBestFirstSearch;\n","import aStar from './Algorithms/Pathfinding/aStar';\nimport binaryTreeMaze from './Algorithms/Maze Generation/binaryTree';\nimport BFS from './Algorithms/Pathfinding/BreathFirstSearch';\nimport dijkstra from \"./Algorithms/Pathfinding/Dijkstra's\";\nimport GreedyBestFirstSearch from './Algorithms/Pathfinding/GreedyBestFirstSearch';\n\nconst rLen = 20;\nconst cLen = 20;\nconst defaultStart = { r: 2, c: 2 };\nconst defaultEnd = { r: 18, c: 17 };\nconst obstacles = [\n  // { r: 0, c: 1 },\n  // { r: 1, c: 2 },\n  // { r: 1, c: 3 },\n  // { r: 1, c: 4 },\n  // { r: 1, c: 5 },\n  // { r: 1, c: 6 },\n  // { r: 0, c: 0 },\n];\n\nconst initialiseNodes = (start, end) => {\n  const nodes = Array(rLen);\n  for (let i = 0; i < rLen; i += 1) {\n    nodes[i] = Array(cLen);\n    for (let j = 0; j < cLen; j += 1) {\n      nodes[i][j] = 'neutral';\n    }\n  }\n\n  nodes[start.r][start.c] = 'start';\n  nodes[end.r][end.c] = 'end';\n  for (let i = 0; i < obstacles.length; i += 1) {\n    nodes[obstacles[i].r][obstacles[i].c] = 'obstacle';\n  }\n  return nodes;\n};\n\nexport const initialState = {\n  start: defaultStart,\n  end: defaultEnd,\n  rLen,\n  cLen,\n  path: [],\n  nodes: initialiseNodes(defaultStart, defaultEnd),\n  pathAlgorithms: {\n    ASTAR: (appState, dispatch) => aStar(appState, dispatch),\n    'Greedy Best First Search': (appState, dispatch) =>\n      GreedyBestFirstSearch(appState, dispatch),\n    'Breath First Search': (appState, dispatch) => BFS(appState, dispatch),\n    \"Dijkstra's\": (appState, dispatch) => dijkstra(appState, dispatch),\n  },\n  mazeAlgorithms: {\n    'Binary Tree': (appState, dispatch) => binaryTreeMaze(appState, dispatch),\n  },\n  currentAlgorithm: { path: 'ASTAR', maze: 'Binary Tree' },\n  obstacles,\n  isFinding: false,\n  controlState: 0,\n};\n\nexport const reducer = (state, action) => {\n  const { payload } = action;\n  // eslint-disable-next-line no-shadow\n  const { nodes, path, obstacles, start, end } = state;\n  const skip =\n    payload &&\n    ((state.start.r === payload.r && state.start.c === payload.c) ||\n      (state.end.r === payload.r && state.end.c === payload.c));\n\n  switch (action.type) {\n    /* updating of board during path finding */\n    case 'OPEN_NODE':\n      if (!skip) {\n        nodes[payload.r][payload.c] = 'open';\n      }\n      return { ...state };\n    case 'CLOSED_NODE':\n      if (!skip) {\n        nodes[payload.r][payload.c] = 'closed';\n      }\n      return { ...state };\n    case 'PATH_NODE':\n      if (!skip) {\n        nodes[payload.r][payload.c] = 'path';\n      }\n      return {\n        ...state,\n        path: [...path, { r: payload.r, c: payload.c }],\n      };\n\n    /* edit the board state */\n    case 'CREATE_OBSTACLE':\n      if (!skip) {\n        nodes[payload.r][payload.c] = 'obstacle';\n        obstacles.push({ r: payload.r, c: payload.c });\n      }\n      return {\n        ...state,\n        obstacles,\n      };\n    case 'REMOVE_OBSTACLE':\n      if (!skip) {\n        nodes[payload.r][payload.c] = 'neutral';\n      }\n      for (let i = 0; i < obstacles.length; i += 1) {\n        if (obstacles[i].r === payload.r && obstacles[i].c === payload.c) {\n          obstacles.splice(i, 1);\n        }\n      }\n      return {\n        ...state,\n        obstacles,\n      };\n    case 'TOGGLE_CONTROL_STATE':\n      return { ...state, controlState: payload };\n    case 'SET_START':\n      nodes[payload.r][payload.c] = 'start';\n      nodes[start.r][start.c] = 'neutral';\n      return { ...state, start: { r: payload.r, c: payload.c } };\n    case 'SET_END':\n      nodes[payload.r][payload.c] = 'end';\n      nodes[end.r][end.c] = 'neutral';\n      return { ...state, end: { r: payload.r, c: payload.c } };\n    case 'CLEAR_BOARD':\n      // everything except start and end points\n      for (let i = 0; i < nodes.length; i += 1) {\n        for (let j = 0; j < nodes[i].length; j += 1) {\n          if (nodes[i][j] !== 'start' && nodes[i][j] !== 'end') {\n            nodes[i][j] = 'neutral';\n          }\n        }\n      }\n      return { ...state, obstacles: [], path: [] };\n    case 'CLEAR_PATH':\n      for (let i = 0; i < nodes.length; i += 1) {\n        for (let j = 0; j < nodes[i].length; j += 1) {\n          if (\n            nodes[i][j] !== 'start' &&\n            nodes[i][j] !== 'end' &&\n            nodes[i][j] !== 'obstacle'\n          ) {\n            nodes[i][j] = 'neutral';\n          }\n        }\n      }\n      return { ...state, path: [] };\n\n    /* start and stop the algorithm */\n    case 'START_ALGO':\n      return { ...state, isFinding: true };\n    case 'END_ALGO':\n      return { ...state, isFinding: false };\n    default:\n      throw new Error('Wrong dispatch type!');\n\n    /* change algorithms */\n    case 'CHANGE_ALGO':\n      return {\n        ...state,\n        currentAlgorithm: payload,\n      };\n  }\n};\n","import styled from 'styled-components';\n\nexport const VisualiserContainer = styled.div`\n  width: fit-content;\n  height: fit-content;\n  background: white;\n  margin: auto;\n  margin-top: 30px;\n  padding: 10px 10px;\n`;\n\nexport const NodeRow = styled.div`\n  width: inherit;\n  height: fit-content;\n  display: flex;\n`;\n\nexport const Node = styled.div`\n  width: 30px;\n  height: 30px;\n  background: ${(props) =>\n    props.blockType === 'start'\n      ? '#ef5350'\n      : props.blockType === 'end'\n      ? '#ab47bc'\n      : props.blockType === 'path'\n      ? '#66bb6a'\n      : props.blockType === 'neutral'\n      ? '#eeeeee'\n      : props.blockType === 'open'\n      ? '#4b636e'\n      : props.blockType === 'closed'\n      ? '#a7c0cd'\n      : props.blockType === 'obstacle'\n      ? '#212121'\n      : '#eeeeee'};\n  border: 1px solid #212121;\n  box-sizing: border-box;\n  transition: background 200ms ease-in-out;\n\n  &:hover {\n    background: ${(props) =>\n      !props.isFinding &&\n      props.blockType !== 'start' &&\n      props.blockType !== 'end' &&\n      (props.controlState === 1\n        ? '#212121'\n        : props.controlState === 2\n        ? '#eeeeee'\n        : props.controlState === 3\n        ? '#ef5350'\n        : props.controlState === 4\n        ? '#ab47bc'\n        : null)};\n    cursor: ${(props) =>\n      !props.isFinding &&\n      props.blockType !== 'start' &&\n      props.blockType !== 'end' &&\n      props.controlState\n        ? 'pointer'\n        : 'default'};\n  }\n\n  @media (max-width: 640px) {\n    width: 20px;\n    height: 20px;\n  }\n\n  @media (max-width: 420px) {\n    width: 15px;\n    height: 15px;\n  }\n`;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport { VisualiserContainer, NodeRow, Node } from './VisualiserElement';\nimport './index.css';\n\nconst Visualiser = ({ appState, dispatch }) => {\n  const { nodes, controlState, isFinding } = appState;\n  const [drag, setDrag] = useState(false);\n\n  const toggleObstacles = (r, c, click) => {\n    if (!isFinding && (drag || click)) {\n      if (controlState === 1) {\n        dispatch({ type: 'CREATE_OBSTACLE', payload: { r, c } });\n      } else if (controlState === 2) {\n        dispatch({ type: 'REMOVE_OBSTACLE', payload: { r, c } });\n      } else if (controlState === 3 && !drag) {\n        dispatch({ type: 'SET_START', payload: { r, c } });\n      } else if (controlState === 4 && !drag) {\n        dispatch({ type: 'SET_END', payload: { r, c } });\n      }\n    }\n  };\n  return (\n    <>\n      <VisualiserContainer>\n        {nodes.map((nodeRow, r) => (\n          <NodeRow key={`row-${r}`}>\n            {nodeRow.map((node, c) => (\n              <Node\n                blockType={nodes[r][c]}\n                controlState={controlState}\n                isFinding={isFinding}\n                id={`${r}${c}`}\n                key={`${r}${c}`}\n                onMouseDown={() => setDrag(true)}\n                onMouseUp={() => setDrag(false)}\n                onClick={() => {\n                  toggleObstacles(r, c, true);\n                }}\n                onMouseMove={() => {\n                  toggleObstacles(r, c, false);\n                }}\n              />\n            ))}\n          </NodeRow>\n        ))}\n      </VisualiserContainer>\n    </>\n  );\n};\n\nexport default Visualiser;\n","import styled from 'styled-components';\n\nexport const ControllerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  max-width: 800px;\n  margin: auto;\n  padding-left: 10px;\n\n  @media (max-width: 640px) {\n    margin-left: 2px;\n  }\n`;\n\nexport const ControllerWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: start;\n  align-items: center;\n  margin: 10px 0;\n  gap: 10px 0;\n`;\n\nexport const StartButton = styled.button`\n  border: none;\n  box-sizing: border-box;\n  border-radius: 3px;\n  background: #66bb6a;\n  border: 2px solid #212121;\n  color: #212121;\n  font-weight: bold;\n  padding: 5px 10px;\n  margin-right: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background: #66bb6a;\n    color: #fff;\n  }\n\n  &:disabled {\n    background: #66bb6a;\n    color: #fff;\n    opacity: 0.5;\n    cursor: default;\n  }\n`;\n\nexport const ControlButton = styled.button`\n  border: none;\n  box-sizing: border-box;\n  border-radius: 3px;\n  background: white;\n  border: 2px solid #212121;\n  color: #212121;\n  font-weight: bold;\n  padding: 5px 10px;\n  margin-right: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background: #212121;\n    color: white;\n  }\n\n  &.active {\n    background: #212121;\n    color: white;\n  }\n\n  &.start.active {\n    background: #ef5350;\n  }\n\n  &.start:hover {\n    background: #ef5350;\n  }\n\n  &.end.active {\n    background: #ab47bc;\n  }\n\n  &.end:hover {\n    background: #ab47bc;\n  }\n\n  &:disabled {\n    cursor: default;\n    background: white;\n    border: 2px solid #212121;\n    color: #212121;\n  }\n`;\n\nexport const DropdownContent = styled.div`\n  display: none;\n  position: absolute;\n  margin-top: 5px;\n  background-color: #f9f9f9;\n  width: fit-content;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  cursor: pointer;\n  border-radius: 3px;\n  border: 2px solid #212121;\n\n  & p {\n    color: black;\n    padding: 12px 16px;\n    margin: 0;\n    text-decoration: none;\n    display: block;\n  }\n\n  & p:hover {\n    background-color: #212121;\n    color: white;\n  }\n`;\nexport const DropdownBtn = styled.button`\n  border: none;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: 2px solid #212121;\n  background: white;\n  color: #212121;\n  font-weight: bold;\n  padding: 5px 10px;\n  margin-right: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background: #212121;\n    color: white;\n  }\n`;\n\nexport const Dropdown = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport {\n  ControllerContainer,\n  StartButton,\n  ControlButton,\n  ControllerWrapper,\n  Dropdown,\n  DropdownContent,\n  DropdownBtn,\n} from './ControllerElements';\nimport { sleep } from '../../Algorithms/helper';\n\nconst Controller = ({ appState, dispatch }) => {\n  const { pathAlgorithms, mazeAlgorithms, currentAlgorithm } = appState;\n  const [activeBtn, setactiveBtn] = useState(null);\n\n  const startAlgo = async (e) => {\n    e.target.disabled = true;\n    dispatch({ type: 'CLEAR_PATH' });\n    dispatch({ type: 'START_ALGO' });\n    const btns = [\n      document.querySelector('#create_obstacle_btn'),\n      document.querySelector('#clear_obstacle_btn'),\n      document.querySelector('#set_start_btn'),\n      document.querySelector('#set_end_btn'),\n      document.querySelector('#clear_board_btn'),\n      document.querySelector('#generate_maze_btn'),\n    ];\n    btns.forEach((btn) => {\n      btn.disabled = true;\n      btn.style.opacity = 0.5;\n    });\n    const endNode = await pathAlgorithms[currentAlgorithm.path](\n      appState,\n      dispatch\n    );\n    dispatch({ type: 'END_ALGO' });\n    btns.forEach((btn) => {\n      btn.disabled = false;\n      btn.style.opacity = 1;\n    });\n    if (!endNode) {\n      console.log('no path found');\n    } else {\n      let currNode = endNode;\n      const stack = [];\n      while (currNode) {\n        stack.push(currNode);\n        currNode = currNode.parent;\n      }\n      while (stack.length > 0) {\n        dispatch({ type: 'PATH_NODE', payload: stack.pop() });\n        await sleep(1);\n      }\n    }\n    e.target.disabled = false;\n  };\n\n  const toggleControl = (e) => {\n    const btn = e.target;\n    if (btn === activeBtn) {\n      setactiveBtn(null);\n    } else {\n      setactiveBtn(btn);\n    }\n  };\n\n  const generateMaze = () => {\n    dispatch({ type: 'CLEAR_BOARD' });\n    mazeAlgorithms[currentAlgorithm.maze](appState, dispatch);\n  };\n  useEffect(() => {\n    generateMaze();\n  }, []);\n\n  const ToggleDropdown = (e) => {\n    const dropdown = e.target.parentElement.querySelector('.dropdownContent');\n    dropdown.style.display =\n      dropdown.style.display === 'block' ? 'none' : 'block';\n  };\n\n  const changeAlgo = (e, algo) => {\n    e.target.parentElement.style.display = 'none';\n    dispatch({ type: 'CHANGE_ALGO', payload: algo });\n  };\n\n  useEffect(() => {\n    const createBtn = document.querySelector('#create_obstacle_btn');\n    const clearBtn = document.querySelector('#clear_obstacle_btn');\n    const setStartBtn = document.querySelector('#set_start_btn');\n    const setEndBtn = document.querySelector('#set_end_btn');\n\n    if (activeBtn === createBtn) {\n      clearBtn.classList.remove('active');\n      setStartBtn.classList.remove('active');\n      setEndBtn.classList.remove('active');\n      createBtn.classList.add('active');\n      dispatch({ type: 'TOGGLE_CONTROL_STATE', payload: 1 });\n    } else if (activeBtn === clearBtn) {\n      createBtn.classList.remove('active');\n      setStartBtn.classList.remove('active');\n      setEndBtn.classList.remove('active');\n      clearBtn.classList.add('active');\n      dispatch({ type: 'TOGGLE_CONTROL_STATE', payload: 2 });\n    } else if (activeBtn === setStartBtn) {\n      createBtn.classList.remove('active');\n      clearBtn.classList.remove('active');\n      setEndBtn.classList.remove('active');\n      setStartBtn.classList.add('active');\n      dispatch({ type: 'TOGGLE_CONTROL_STATE', payload: 3 });\n    } else if (activeBtn === setEndBtn) {\n      createBtn.classList.remove('active');\n      clearBtn.classList.remove('active');\n      setStartBtn.classList.remove('active');\n      setEndBtn.classList.add('active');\n      dispatch({ type: 'TOGGLE_CONTROL_STATE', payload: 4 });\n    } else {\n      createBtn.classList.remove('active');\n      clearBtn.classList.remove('active');\n      setEndBtn.classList.remove('active');\n      setStartBtn.classList.remove('active');\n      dispatch({ type: 'TOGGLE_CONTROL_STATE', payload: 0 });\n    }\n  }, [activeBtn]);\n  return (\n    <>\n      <ControllerContainer>\n        {/* Edit board buttons */}\n        <ControllerWrapper>\n          <ControlButton\n            id=\"create_obstacle_btn\"\n            onClick={(e) => toggleControl(e)}\n          >\n            Create Obstacle\n          </ControlButton>\n          <ControlButton\n            id=\"clear_obstacle_btn\"\n            onClick={(e) => toggleControl(e)}\n          >\n            Remove Obstacle\n          </ControlButton>\n          <ControlButton\n            className=\"start\"\n            id=\"set_start_btn\"\n            onClick={(e) => toggleControl(e)}\n          >\n            Set Start\n          </ControlButton>\n          <ControlButton\n            className=\"end\"\n            id=\"set_end_btn\"\n            onClick={(e) => toggleControl(e)}\n          >\n            Set End\n          </ControlButton>\n          <ControlButton\n            id=\"clear_board_btn\"\n            onClick={() => dispatch({ type: 'CLEAR_BOARD' })}\n          >\n            Clear Board\n          </ControlButton>\n        </ControllerWrapper>\n\n        {/* maze generation buttons */}\n        <ControllerWrapper>\n          <Dropdown>\n            <DropdownBtn\n              onClick={(e) => {\n                ToggleDropdown(e);\n              }}\n            >\n              Maze algorithm: {currentAlgorithm.maze}\n            </DropdownBtn>\n            <DropdownContent className=\"dropdownContent\">\n              {Object.keys(mazeAlgorithms).map((algo) => (\n                <p\n                  key={algo}\n                  onClick={(e) => {\n                    changeAlgo(e, { ...currentAlgorithm, maze: algo });\n                  }}\n                >\n                  {algo}\n                </p>\n              ))}\n            </DropdownContent>\n          </Dropdown>\n          <ControlButton\n            id=\"generate_maze_btn\"\n            onClick={() => {\n              generateMaze();\n            }}\n          >\n            Generate Maze\n          </ControlButton>\n        </ControllerWrapper>\n\n        {/* pathfinding buttons */}\n        <ControllerWrapper>\n          <Dropdown>\n            <DropdownBtn\n              onClick={(e) => {\n                ToggleDropdown(e);\n              }}\n            >\n              Pathfinding algorithm: {currentAlgorithm.path}\n            </DropdownBtn>\n            <DropdownContent className=\"dropdownContent\">\n              {Object.keys(pathAlgorithms).map((algo) => (\n                <p\n                  key={algo}\n                  onClick={(e) => {\n                    changeAlgo(e, { ...currentAlgorithm, path: algo });\n                  }}\n                >\n                  {algo}\n                </p>\n              ))}\n            </DropdownContent>\n          </Dropdown>\n          <StartButton onClick={startAlgo}>Start</StartButton>\n        </ControllerWrapper>\n      </ControllerContainer>\n    </>\n  );\n};\n\nexport default Controller;\n","import React, { useReducer } from 'react';\nimport { reducer, initialState } from './reducer';\n\nimport './App.css';\nimport Visualiser from './Components/Visualiser';\nimport Controller from './Components/Controller';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <h1>Pathfinding Visualiser</h1>\n      <Controller appState={state} dispatch={dispatch} />\n      <Visualiser appState={state} dispatch={dispatch} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}